---
- name: Ansible installation
  hosts: all
  become: yes
  tasks:
    - name: Deploy key
      authorized_key:
        user: "{{ansible_user}}"
        key: "{{ lookup('file', '{{playbook_dir}}/key_certs/id_rsa.pub')}}"

    - name: Disallow password authentication
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^(.*)PasswordAuthentication yes'
        line: 'PasswordAuthentication no'
        state: present

    - name: Disable root access via ssh
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        line: PermitRootLogin no

    - name: Disable password authentication
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^(.*)PasswordAuthentication yes'
        line: 'PasswordAuthentication no'
        state: present

    - name: Disable root access via ssh
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        line: PermitRootLogin no

    - name: Create directory
      file:
        path: /var/www/html
        state: directory
        mode: 0775

    - name: Copy app to host
      ansible.builtin.copy:
        src: '{{playbook_dir}}/app.py'
        dest: /var/www/html

    - name: Install python3-pip
      apt:
        name: python3-pip
        state: latest

    - name: Run python3 as default
      ansible.builtin.command:
        cmd: update-alternatives --install /usr/bin/python python /usr/bin/python3.7 1

    - name: Install nginx
      apt:
        name: nginx
        state: latest

    - name: Install curl
      apt:
        name: curl
        state: latest
    
    - name: Install ufw
      apt:
        name: ufw
        state: latest

    - name: Copy key to host
      ansible.builtin.copy:
        src: '{{playbook_dir}}/key_certs/nginx-selfsigned.key'
        dest: /etc/ssl/private/

    - name: Copy cert to host
      ansible.builtin.copy:
        src: '{{playbook_dir}}/key_certs/nginx-selfsigned.crt'
        dest: /etc/ssl/certs/        

    - name: Install flask
      pip:
        name: flask
        executable: pip3

    - name: Install emoji library
      pip:
        name: emoji
        executable: pip3

    - name: Install marshmallow library
      pip:
        name: marshmallow
        executable: pip3

    - name: Install waitress library
      pip:
        name: waitress 
        executable: pip3
        
    - name: Create Flask service
      copy:
        src: '{{playbook_dir}}/flask-server.service'
        dest: /etc/systemd/system/

    - name: Enable Flask service on boot
      service: 
        name: flask-server.service
        enabled: yes

    - name: Start Flask
      service: 
        name: flask-server.service
        state: started

    - name: Copy NGINX config to host
      ansible.builtin.copy:
        src: '{{playbook_dir}}/nginx/default'
        dest: /etc/nginx/sites-enabled/

    - name: UFW block incoming
      ufw:
        default: deny
        direction: incoming

    - name: UFW allow outgoing
      ufw:
        default: allow
        direction: outgoing

    - name: UFW allow ssh, http, https
      ufw:
        rule: allow
        port: 22,80,443
        proto: tcp

    - name: Restart service nginx
      ansible.builtin.systemd:
        name: nginx
        state: restarted
    
    - name: Restart service ssh
      ansible.builtin.systemd:
        name: sshd
        state: restarted